{"version":3,"file":"/home/usuario/P6/src/ejercicio-mod/ejercicio-mod.ts","sources":["/home/usuario/P6/src/ejercicio-mod/ejercicio-mod.ts"],"names":[],"mappings":";;;AAKA;;;;;GAKG;AACH,MAAe,oBAAoB;IAGjC;;OAEG;IACO,KAAK,CAAM;IAErB;;OAEG;IACH;QACE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAClB,CAAC;IAED;;;OAGG;IACH,OAAO,CAAC,IAAO;QACb,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IAED;;;;OAIG;IACH,OAAO,CAAC,KAAa;QACnB,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YAC3C,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SAC1B;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;;;OAIG;IACH,UAAU,CAAC,KAAa;QACtB,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YAC3C,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACvC;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;;OAGG;IACH,gBAAgB;QACd,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC3B,CAAC;CAQF;AAED;;;GAGG;AACH,MAAa,2BAA4B,SAAQ,oBAA4B;IAC3E;;;;OAIG;IACH,MAAM,CAAC,IAAY;QACjB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;IACpD,CAAC;CACF;AATD,kEASC;AAED;;;GAGG;AACH,MAAa,0BAA2B,SAAQ,oBAA4B;IAC1E;;;;OAIG;IACH,MAAM,CAAC,IAAY;QACjB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1D,CAAC;CACF;AATD,gEASC","sourcesContent":["import {\n  Collectable,\n  Searchable,\n} from \"../ejercicio-mod/ejercicio-mod-interfaces\";\n\n/**\n * Abstract class that implements the Collectable and Searchable interfaces.\n * It contains an array of items of type T and implements the necessary methods\n * to add, get, remove and count items, as well as an abstract method for searching\n * items of type T.\n */\nabstract class SearchableCollection<T>\n  implements Collectable<T>, Searchable<T>\n{\n  /**\n   * Array of items of type T.\n   */\n  protected items: T[];\n\n  /**\n   * Creates an instance of SearchableCollection and initializes the items array.\n   */\n  constructor() {\n    this.items = [];\n  }\n\n  /**\n   * Adds an item of type T to the items array.\n   * @param item The item of type T to add.\n   */\n  addItem(item: T): void {\n    this.items.push(item);\n  }\n\n  /**\n   * Gets the item of type T located at the specified index in the items array.\n   * @param index The index of the item to get.\n   * @returns The item of type T located at the specified index or undefined if the index is out of range.\n   */\n  getItem(index: number): T | undefined {\n    if (index >= 0 && index < this.items.length) {\n      return this.items[index];\n    }\n    return undefined;\n  }\n\n  /**\n   * Removes the item of type T located at the specified index in the items array.\n   * @param index The index of the item to remove.\n   * @returns The item of type T that was removed from the array or undefined if the index is out of range.\n   */\n  removeItem(index: number): T {\n    if (index >= 0 && index < this.items.length) {\n      return this.items.splice(index, 1)[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Gets the number of items of type T in the items array.\n   * @returns The number of items of type T in the items array.\n   */\n  getNumberOfItems(): number {\n    return this.items.length;\n  }\n\n  /**\n   * Abstract method for searching items of type T in the items array.\n   * @param term The search term of type T.\n   * @returns An array of items of type T that match the search term or undefined if no matches were found.\n   */\n  abstract search(term: T): T[] | undefined;\n}\n\n/**\n * Class that extends the SearchableCollection class and implements the search method for searching\n * for numbers in the items array.\n */\nexport class NumericSearchableCollection extends SearchableCollection<number> {\n  /**\n   * Searches for numbers in the items array that match the specified search term.\n   * @param term The search term of type number.\n   * @returns An array of numbers that match the search term or undefined if no matches were found.\n   */\n  search(term: number): number[] | undefined {\n    return this.items.filter((item) => item === term);\n  }\n}\n\n/**\n * Class that extends the SearchableCollection class and implements the search method for searching\n * for strings in the items array.\n */\nexport class StringSearchableCollection extends SearchableCollection<string> {\n  /**\n   * Searches for strings in the items array that contain the specified search term.\n   * @param term The search term of type string.\n   * @returns An array of strings that contain the search term or undefined if no matches were found.\n   */\n  search(term: string): string[] | undefined {\n    return this.items.filter((item) => item.includes(term));\n  }\n}\n"]}