{"version":3,"file":"/home/usuario/P6/src/ejercicio-1/Movies.ts","sources":["/home/usuario/P6/src/ejercicio-1/Movies.ts"],"names":[],"mappings":";;;AACA,wFAAqF;AAErF;;GAEG;AACH,MAAa,KAAK;IAKP;IAIA;IAIA;IAIA;IAhBT;IACE;;OAEG;IACI,KAAa;IACpB;;OAEG;IACI,IAAY;IACnB;;OAEG;IACI,KAAa;IACpB;;OAEG;IACI,QAAgB;QAZhB,UAAK,GAAL,KAAK,CAAQ;QAIb,SAAI,GAAJ,IAAI,CAAQ;QAIZ,UAAK,GAAL,KAAK,CAAQ;QAIb,aAAQ,GAAR,QAAQ,CAAQ;IACtB,CAAC;CACL;AAnBD,sBAmBC;AAED;;GAEG;AACH,MAAa,eACX,SAAQ,qDAAgC;IAGxC,YAAY,MAAe;QACzB,KAAK,CAAC,MAAM,CAAC,CAAC;IAChB,CAAC;IAED;;;;OAIG;IACH,YAAY,CAAC,IAAY;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;IAC3D,CAAC;IAED;;;;OAIG;IACH,YAAY,CAAC,IAAY;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CACjC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CACvD,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACH,aAAa,CAAC,KAAa;QACzB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC;IAC7D,CAAC;CACF;AApCD,0CAoCC","sourcesContent":["import { Searchable, Streamable } from \"../ejercicio-1/interfaces\";\nimport { BasicStreamableCollection } from \"../ejercicio-1/BasicStreamableCollection\";\n\n/**\n * Clase que representa una película.\n */\nexport class Movie {\n  constructor(\n    /**\n     * Título de la película.\n     */\n    public title: string,\n    /**\n     * Año de lanzamiento de la película.\n     */\n    public year: number,\n    /**\n     * Género de la película.\n     */\n    public genre: string,\n    /**\n     * Director de la película.\n     */\n    public director: string\n  ) {}\n}\n\n/**\n * Clase que representa una colección de películas.\n */\nexport class MovieCollection\n  extends BasicStreamableCollection<Movie>\n  implements Searchable<Movie>\n{\n  constructor(movies: Movie[]) {\n    super(movies);\n  }\n\n  /**\n   * Busca todas las películas que se lanzaron en un año determinado.\n   * @param year Año de lanzamiento de las películas a buscar.\n   * @returns Un array de películas que se lanzaron en el año especificado.\n   */\n  searchByYear(year: number): Movie[] {\n    return this.items.filter((movie) => movie.year === year);\n  }\n\n  /**\n   * Busca todas las películas que contienen una cadena de caracteres en su título.\n   * @param name Cadena de caracteres a buscar en los títulos de las películas.\n   * @returns Un array de películas que contienen la cadena de caracteres especificada en su título.\n   */\n  searchByName(name: string): Movie[] {\n    return this.items.filter((movie) =>\n      movie.title.toLowerCase().includes(name.toLowerCase())\n    );\n  }\n\n  /**\n   * Busca todas las películas que pertenecen a un género determinado.\n   * @param genre Género de las películas a buscar.\n   * @returns Un array de películas que pertenecen al género especificado.\n   */\n  searchByGenre(genre: string): Movie[] {\n    return this.items.filter((movie) => movie.genre === genre);\n  }\n}\n"]}