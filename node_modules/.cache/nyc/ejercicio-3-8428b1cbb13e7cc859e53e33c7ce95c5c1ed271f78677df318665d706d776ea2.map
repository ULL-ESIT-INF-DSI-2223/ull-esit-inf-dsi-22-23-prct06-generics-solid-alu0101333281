{"version":3,"file":"/home/usuario/P6/src/ejercicio-3.ts","sources":["/home/usuario/P6/src/ejercicio-3.ts"],"names":[],"mappings":"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","sourcesContent":["interface ICancion {\n  nombre: string;\n  duracion: number;\n  generos: string[];\n  single: boolean;\n  reproducciones: number;\n}\n\ninterface ISingle extends ICancion {\n  versiones?: ICancion[];\n}\nexport class Disco<T extends ICancion> implements IDisco<T> {\n    constructor(\n      public nombre: string,\n      public a単oPublicacion: number,\n      public canciones: T[],\n      public singles?: ISingle[]\n    ) {\n      this.singles = singles || [];\n    }\n  }\n\nexport abstract class DiscoSingle<T extends ICancion | ISingle> extends Disco<T> {\n  declare singles?: ISingle[];\n  constructor(\n    nombre: string,\n    a単oPublicacion: number,\n    canciones: T[],\n    singles?: ISingle[]\n  ) {\n    super(nombre, a単oPublicacion, canciones);\n    this.singles = singles;\n  }\n}\n\ninterface IDisco<T extends ICancion | ISingle> {\n  nombre: string;\n  a単oPublicacion: number;\n  canciones: T[];\n  singles?: ISingle[];\n}\n\nexport abstract class Artista<T extends ICancion | ISingle> implements IArtista<T> {\n  constructor(\n    public nombre: string,\n    public oyentesMensuales: number,\n    public discografia: IDisco<T>[]\n  ) {}\n  abstract numCancionesEnDisco(discoNombre: string): number;\n  abstract duracionDisco(discoNombre: string): number;\n  abstract reproduccionesDisco(discoNombre: string): number;\n}\n\nexport class ArtistaImpl<T extends ICancion | ISingle> extends Artista<T> {\n  numCancionesEnDisco(discoNombre: string): number {\n    const disco = this.discografia.find((d) => d.nombre === discoNombre);\n    if (disco) {\n      return (\n        disco.canciones.length + (disco.singles ? disco.singles.length : 0)\n      );\n    } else {\n      throw new Error(\n        `El artista ${this.nombre} no tiene un disco o single llamado ${discoNombre}`\n      );\n    }\n  }\n\n  duracionDisco(discoNombre: string): number {\n    const disco = this.discografia.find((d) => d.nombre === discoNombre);\n    if (disco) {\n      const duracionCanciones = disco.canciones.reduce(\n        (totalDuracion, cancion) => totalDuracion + cancion.duracion,\n        0\n      );\n      const duracionSingles = disco.singles\n        ? disco.singles.reduce((totalDuracion, single) => {\n            const duracionVersiones = single.versiones\n              ? single.versiones.reduce(\n                  (totalDuracion, version) => totalDuracion + version.duracion,\n                  0\n                )\n              : 0;\n            return totalDuracion + single.duracion + duracionVersiones;\n          }, 0)\n        : 0;\n      return duracionCanciones + duracionSingles;\n    } else {\n      throw new Error(\n        `El artista ${this.nombre} no tiene un disco o single llamado ${discoNombre}`\n      );\n    }\n  }\n\n  reproduccionesDisco(discoNombre: string): number {\n    const disco = this.discografia.find((d) => d.nombre === discoNombre);\n    if (disco) {\n      const reproduccionesCanciones = disco.canciones.reduce(\n        (totalReproducciones, cancion) =>\n          totalReproducciones + cancion.reproducciones,\n        0\n      );\n      const reproduccionesSingles = disco.singles\n        ? disco.singles.reduce((totalReproducciones, single) => {\n            const reproduccionesVersiones = single.versiones\n              ? single.versiones.reduce(\n                  (totalReproducciones, version) =>\n                    totalReproducciones + version.reproducciones,\n                  0\n                )\n              : 0;\n            return (\n              totalReproducciones +\n              single.reproducciones +\n              reproduccionesVersiones\n            );\n          }, 0)\n        : 0;\n      return reproduccionesCanciones + reproduccionesSingles;\n    } else {\n      throw new Error(\n        `El artista ${this.nombre} no tiene un disco o single llamado ${discoNombre}`\n      );\n    }\n  }\n}\n\ninterface ISingle {\n  nombre: string;\n  duracion: number;\n  generos: string[];\n  reproducciones: number;\n  versiones?: ICancion[];\n}\n\nexport class Single implements ISingle {\n  constructor(\n    public nombre: string,\n    public duracion: number,\n    public generos: string[],\n    public reproducciones: number,\n    public versiones?: ICancion[]\n  ) {\n    this.versiones = versiones || [];\n  }\n  single: boolean;\n}\n\n\n\ninterface IArtista<T extends ICancion | ISingle> {\n  nombre: string;\n  oyentesMensuales: number;\n  discografia: IDisco<T>[];\n}\n"]}