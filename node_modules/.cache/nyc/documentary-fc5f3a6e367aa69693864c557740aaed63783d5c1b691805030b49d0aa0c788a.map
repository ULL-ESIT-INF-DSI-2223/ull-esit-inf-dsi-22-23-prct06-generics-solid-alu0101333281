{"version":3,"file":"/home/usuario/P6/src/ejercicio-1/documentary.ts","sources":["/home/usuario/P6/src/ejercicio-1/documentary.ts"],"names":[],"mappings":";;;AACA,wFAAqF;AAErF;;;GAGG;AACH,MAAa,WAAW;IAEb;IACA;IACA;IACA;IAJT,YACS,KAAa,EACb,IAAY,EACZ,KAAa,EACb,QAAgB;QAHhB,UAAK,GAAL,KAAK,CAAQ;QACb,SAAI,GAAJ,IAAI,CAAQ;QACZ,UAAK,GAAL,KAAK,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAAQ;IACtB,CAAC;CACL;AAPD,kCAOC;AAED;;;GAGG;AACH,MAAa,qBACX,SAAQ,qDAAsC;IAG9C;;;;OAIG;IACH,YAAY,aAA4B;QACtC,KAAK,CAAC,aAAa,CAAC,CAAC;IACvB,CAAC;IAED;;;;;;OAMG;IACH,YAAY,CAAC,IAAY;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,WAAW,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;IACvE,CAAC;IAED;;;;;;OAMG;IACH,YAAY,CAAC,IAAY;QACvB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,EAAE,CACvC,WAAW,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAC7D,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,aAAa,CAAC,KAAa;QACzB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/D,CAAC;CACF;AA9CD,sDA8CC","sourcesContent":["import { Searchable, Streamable } from \"../ejercicio-1/interfaces\";\nimport { BasicStreamableCollection } from \"../ejercicio-1/BasicStreamableCollection\";\n\n/**\n * Una clase que representa un documental con un título, un año de lanzamiento,\n * un género y un narrador.\n */\nexport class Documentary {\n  constructor(\n    public title: string,\n    public year: number,\n    public genre: string,\n    public narrator: string\n  ) {}\n}\n\n/**\n * Una colección de documentales que extiende la clase `BasicStreamableCollection`\n * y también implementa la interfaz `Searchable` para buscar documentales en la colección.\n */\nexport class DocumentaryCollection\n  extends BasicStreamableCollection<Documentary>\n  implements Searchable<Documentary>\n{\n  /**\n   * Crea una nueva instancia de `DocumentaryCollection`.\n   *\n   * @param documentaries Un arreglo de objetos `Documentary` para agregar a la colección.\n   */\n  constructor(documentaries: Documentary[]) {\n    super(documentaries);\n  }\n\n  /**\n   * Busca los documentales en la colección que tengan un año de lanzamiento\n   * coincidente con el valor proporcionado.\n   *\n   * @param year El año de lanzamiento a buscar en los documentales.\n   * @returns Un arreglo de objetos `Documentary` que coinciden con el año proporcionado.\n   */\n  searchByYear(year: number): Documentary[] {\n    return this.items.filter((documentary) => documentary.year === year);\n  }\n\n  /**\n   * Busca los documentales en la colección que contengan el valor proporcionado\n   * en el título del documental (la búsqueda no distingue entre mayúsculas y minúsculas).\n   *\n   * @param name El texto a buscar en los títulos de los documentales.\n   * @returns Un arreglo de objetos `Documentary` que contienen el texto proporcionado en el título.\n   */\n  searchByName(name: string): Documentary[] {\n    return this.items.filter((documentary) =>\n      documentary.title.toLowerCase().includes(name.toLowerCase())\n    );\n  }\n\n  /**\n   * Busca los documentales en la colección que pertenezcan al género proporcionado.\n   *\n   * @param genre El género a buscar en los documentales.\n   * @returns Un arreglo de objetos `Documentary` que pertenecen al género proporcionado.\n   */\n  searchByGenre(genre: string): Documentary[] {\n    return this.items.filter((doc) => doc.genre.includes(genre));\n  }\n}\n"]}