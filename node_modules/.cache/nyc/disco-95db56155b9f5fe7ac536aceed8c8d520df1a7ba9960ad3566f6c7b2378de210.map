{"version":3,"file":"/home/usuario/P6/src/ejercicio-3/disco.ts","sources":["/home/usuario/P6/src/ejercicio-3/disco.ts"],"names":[],"mappings":";;;AAEA;;;;GAIG;AACH,MAAa,KAAK;IASP;IACA;IACA;IACA;IAXT;;;;;;OAMG;IACH,YACS,MAAc,EACd,cAAsB,EACtB,SAAc,EACd,OAAmB;QAHnB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAQ;QACtB,cAAS,GAAT,SAAS,CAAK;QACd,YAAO,GAAP,OAAO,CAAY;QAE1B,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;IAC/B,CAAC;CACF;AAhBD,sBAgBC;AAED;;;;GAIG;AACH,MAAsB,WAEpB,SAAQ,KAAQ;IAKhB;;;;;;OAMG;IACH,YACE,MAAc,EACd,cAAsB,EACtB,SAAc,EACd,OAAmB;QAEnB,KAAK,CAAC,MAAM,EAAE,cAAc,EAAE,SAAS,CAAC,CAAC;QACzC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;CACF;AAvBD,kCAuBC","sourcesContent":["import { ICancion, ISingle, IDisco } from \"../ejercicio-3/interfaces\";\n\n/**\n * Clase que representa un disco que contiene canciones y, opcionalmente, singles.\n * @implements {IDisco<T>}\n * @template T El tipo de las canciones del disco.\n */\nexport class Disco<T extends ICancion> implements IDisco<T> {\n  /**\n   * Crea una instancia de Disco.\n   * @param {string} nombre El nombre del disco.\n   * @param {number} añoPublicacion El año en que se publicó el disco.\n   * @param {T[]} canciones Las canciones del disco.\n   * @param {ISingle[]} [singles] Los singles del disco (opcional).\n   */\n  constructor(\n    public nombre: string,\n    public añoPublicacion: number,\n    public canciones: T[],\n    public singles?: ISingle[]\n  ) {\n    this.singles = singles || [];\n  }\n}\n\n/**\n * Clase abstracta que representa un disco que contiene canciones y singles.\n * @extends {Disco<T>}\n * @template T El tipo de las canciones y singles del disco.\n */\nexport abstract class DiscoSingle<\n  T extends ICancion | ISingle\n> extends Disco<T> {\n  /**\n   * Los singles del disco (opcional).\n   */\n  declare singles?: ISingle[];\n  /**\n   * Crea una instancia de DiscoSingle.\n   * @param {string} nombre El nombre del disco.\n   * @param {number} añoPublicacion El año en que se publicó el disco.\n   * @param {T[]} canciones Las canciones y singles del disco.\n   * @param {ISingle[]} [singles] Los singles del disco (opcional).\n   */\n  constructor(\n    nombre: string,\n    añoPublicacion: number,\n    canciones: T[],\n    singles?: ISingle[]\n  ) {\n    super(nombre, añoPublicacion, canciones);\n    this.singles = singles;\n  }\n}\n"]}